{
    "collection": {
        "info": {
            "_postman_id": "4ddc7e7b-fdc1-4f82-bee1-b738a657f547",
            "name": "Trello",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "updatedAt": "2025-04-08T10:25:03.000Z",
            "createdAt": "2025-01-14T10:55:08.000Z",
            "lastUpdatedBy": "22855432",
            "uid": "22855432-4ddc7e7b-fdc1-4f82-bee1-b738a657f547"
        },
        "item": [
            {
                "name": "Create Board",
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "id": "10a8a507-343f-4823-afa5-987ae55b19d6",
                            "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(200);",
                                "});",
                                "",
                                "let response",
                                "",
                                "pm.test(\"Response body is an object\", () => {",
                                "    response = pm.response.json();",
                                "    pm.expect(response).to.be.a('object')",
                                "})",
                                "",
                                "pm.test(\"Response body has ID\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('id')",
                                "})",
                                "",
                                "pm.test(\"Save board ID\", () => {",
                                "    pm.collectionVariables.set('boardId', response.id)",
                                "})"
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    }
                ],
                "id": "e3ba2000-7e72-435d-a985-b8e120d588dc",
                "protocolProfileBehavior": {
                    "disableBodyPruning": true
                },
                "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                        "raw": "{{urlBase}}/1/boards?name=Learning Postman&key={{trelloKey}}&token={{trelloToken}}",
                        "host": [
                            "{{urlBase}}"
                        ],
                        "path": [
                            "1",
                            "boards"
                        ],
                        "query": [
                            {
                                "key": "name",
                                "value": "Learning Postman",
                                "description": "Required"
                            },
                            {
                                "key": "key",
                                "value": "{{trelloKey}}"
                            },
                            {
                                "key": "token",
                                "value": "{{trelloToken}}"
                            },
                            {
                                "key": "defaultLabels",
                                "value": null,
                                "description": "bool",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "defaultLists",
                                "value": null,
                                "description": "bool",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "desc",
                                "value": null,
                                "description": "A new description for the board, 0 to 16384 characters long\n\n",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "idOrganization",
                                "value": null,
                                "description": "The id or name of the Workspace the board should belong to.\n\nPattern: ^[0-9a-fA-F]{24}$",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "idBoardSource",
                                "value": null,
                                "description": "The id of a board to copy into the new board.\n\nPattern: ^[0-9a-fA-F]{24}$",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "keepFromSource",
                                "value": null,
                                "description": "To keep cards from the original board pass in the value cards\n\nDefault: none\nValid values: cards, none",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "powerUps",
                                "value": null,
                                "description": "The Power-Ups that should be enabled on the new board. One of: all, calendar, cardAging, recap, voting.\n\nValid values: all, calendar, cardAging, recap, voting",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "prefs_permissionLevel",
                                "value": null,
                                "description": "The permissions level of the board. One of: org, private, public.\n\nDefault: private\nValid values: org, private, public",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "prefs_voting",
                                "value": null,
                                "description": "Who can vote on this board. One of disabled, members, observers, org, public.\n\nDefault: disabled\nValid values: disabled, members, observers, org, public",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "prefs_comments",
                                "value": null,
                                "description": "Who can comment on cards on this board. One of: disabled, members, observers, org, public.\n\nDefault: members\nValid values: disabled, members, observers, org, public",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "prefs_invitations",
                                "value": null,
                                "description": "Determines what types of members can invite users to join. One of: admins, members.\n\nDefault: members\nValid values: members, admins",
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "prefs_selfJoin",
                                "value": null,
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "prefs_cardCovers",
                                "value": null,
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "prefs_background",
                                "value": null,
                                "type": "text",
                                "disabled": true
                            },
                            {
                                "key": "prefs_cardAging",
                                "value": null,
                                "type": "text",
                                "disabled": true
                            }
                        ]
                    }
                },
                "response": [],
                "uid": "22855432-e3ba2000-7e72-435d-a985-b8e120d588dc"
            },
            {
                "name": "Get board by ID",
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "id": "020f88e8-ed0e-4f06-98c2-f7f8d12e84ba",
                            "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(200);",
                                "});",
                                "",
                                "pm.test(\"Response body is an object\", () => {",
                                "    const response = pm.response.json();",
                                "    pm.expect(response).to.be.an('object')",
                                "})"
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    }
                ],
                "id": "e24b0e2b-b198-41c2-85d3-97328dde9384",
                "protocolProfileBehavior": {
                    "disableBodyPruning": true
                },
                "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                        "raw": "{{urlBase}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
                        "host": [
                            "{{urlBase}}"
                        ],
                        "path": [
                            "1",
                            "boards",
                            ":id"
                        ],
                        "query": [
                            {
                                "key": "key",
                                "value": "{{trelloKey}}"
                            },
                            {
                                "key": "token",
                                "value": "{{trelloToken}}"
                            }
                        ],
                        "variable": [
                            {
                                "key": "id",
                                "value": "{{boardId}}"
                            }
                        ]
                    }
                },
                "response": [],
                "uid": "22855432-e24b0e2b-b198-41c2-85d3-97328dde9384"
            },
            {
                "name": "Create TODO list",
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "id": "8fbb7ac0-de78-48e3-8d94-5c8ea6db3511",
                            "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(200);",
                                "});",
                                "",
                                "let response;",
                                "",
                                "pm.test(\"Response body is an object\", () => {",
                                "    response = pm.response.json();",
                                "    pm.expect(response).to.be.an('object')",
                                "})",
                                "",
                                "pm.test(\"Response body has ID\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('id')",
                                "})",
                                "",
                                "pm.test(\"Response body has name\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('name')",
                                "})",
                                "",
                                "pm.test(\"Response body has idBoard\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('idBoard')",
                                "})",
                                "",
                                "pm.test(\"Validate created information\", () => {",
                                "    pm.expect(response.name).to.be.eql(\"TODO\");",
                                "    pm.expect(response.idBoard).to.be.eql(pm.variables.get('boardId'));",
                                "})",
                                "",
                                "pm.test(\"Able to set colletion variable for todoListId\", () => {",
                                "    pm.collectionVariables.set('todoListId', response.id)",
                                "})"
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    }
                ],
                "id": "72a87b42-fe4c-4240-a310-a3aad5121e06",
                "protocolProfileBehavior": {
                    "disableBodyPruning": true
                },
                "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                        "raw": "{{urlBase}}/1/lists/?key={{trelloKey}}&token={{trelloToken}}&idBoard={{boardId}}&name=TODO",
                        "host": [
                            "{{urlBase}}"
                        ],
                        "path": [
                            "1",
                            "lists",
                            ""
                        ],
                        "query": [
                            {
                                "key": "key",
                                "value": "{{trelloKey}}"
                            },
                            {
                                "key": "token",
                                "value": "{{trelloToken}}"
                            },
                            {
                                "key": "idBoard",
                                "value": "{{boardId}}"
                            },
                            {
                                "key": "name",
                                "value": "TODO"
                            }
                        ]
                    }
                },
                "response": [],
                "uid": "22855432-72a87b42-fe4c-4240-a310-a3aad5121e06"
            },
            {
                "name": "Create DONE list",
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "id": "23a40d30-6d9c-42fa-8252-8b9b0161470e",
                            "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(200);",
                                "});",
                                "",
                                "let response;",
                                "",
                                "pm.test(\"Response body is an object\", () => {",
                                "    response = pm.response.json();",
                                "    pm.expect(response).to.be.an('object')",
                                "})",
                                "",
                                "pm.test(\"Response body has ID\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('id')",
                                "})",
                                "",
                                "pm.test(\"Response body has name\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('name')",
                                "})",
                                "",
                                "pm.test(\"Response body has idBoard\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('idBoard')",
                                "})",
                                "",
                                "pm.test(\"Validate created information\", () => {",
                                "    pm.expect(response.name).to.be.eql(\"DONE\");",
                                "    pm.expect(response.idBoard).to.be.eql(pm.variables.get('boardId'));",
                                "})",
                                "",
                                "pm.test(\"Able to set colletion variable for doneListId\", () => {",
                                "    pm.collectionVariables.set('doneListId', response.id)",
                                "})"
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    }
                ],
                "id": "d12e4024-63e2-4324-ac7b-d42e3e0928e2",
                "protocolProfileBehavior": {
                    "disableBodyPruning": true
                },
                "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                        "raw": "{{urlBase}}/1/lists/?key={{trelloKey}}&token={{trelloToken}}&idBoard={{boardId}}&name=DONE",
                        "host": [
                            "{{urlBase}}"
                        ],
                        "path": [
                            "1",
                            "lists",
                            ""
                        ],
                        "query": [
                            {
                                "key": "key",
                                "value": "{{trelloKey}}"
                            },
                            {
                                "key": "token",
                                "value": "{{trelloToken}}"
                            },
                            {
                                "key": "idBoard",
                                "value": "{{boardId}}"
                            },
                            {
                                "key": "name",
                                "value": "DONE"
                            }
                        ]
                    }
                },
                "response": [],
                "uid": "22855432-d12e4024-63e2-4324-ac7b-d42e3e0928e2"
            },
            {
                "name": "Create new card",
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "id": "8153c547-3f46-400f-9b37-4103f46a6cf2",
                            "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(200);",
                                "});",
                                "",
                                "let response;",
                                "",
                                "pm.test(\"Response body is an object\", () => {",
                                "    response = pm.response.json();",
                                "    pm.expect(response).to.be.an('object')",
                                "})",
                                "",
                                "pm.test(\"Response body has ID\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('id')",
                                "})",
                                "",
                                "pm.test(\"Response body has name\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('name')",
                                "})",
                                "",
                                "pm.test(\"Response body has idBoard\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('idBoard')",
                                "})",
                                "",
                                "pm.test(\"Response body has idList\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('idList')",
                                "})",
                                "",
                                "pm.test(\"Validate created information\", () => {",
                                "    pm.expect(response.name).to.be.eql(\"Create Card\");",
                                "    pm.expect(response.idBoard).to.be.eql(pm.variables.get('boardId'));",
                                "    pm.expect(response.idList).to.be.eql(pm.variables.get('todoListId'));",
                                "})",
                                "",
                                "pm.test(\"Able to set colletion variable for cardId\", () => {",
                                "    pm.collectionVariables.set('cardId', response.id)",
                                "})"
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    }
                ],
                "id": "c83336e8-d6f7-4ee4-b3c1-dd7e9941af93",
                "protocolProfileBehavior": {
                    "disableBodyPruning": true
                },
                "request": {
                    "method": "POST",
                    "header": [],
                    "url": {
                        "raw": "{{urlBase}}/1/cards?key={{trelloKey}}&token={{trelloToken}}&name=Create Card&idList={{todoListId}}",
                        "host": [
                            "{{urlBase}}"
                        ],
                        "path": [
                            "1",
                            "cards"
                        ],
                        "query": [
                            {
                                "key": "key",
                                "value": "{{trelloKey}}"
                            },
                            {
                                "key": "token",
                                "value": "{{trelloToken}}"
                            },
                            {
                                "key": "name",
                                "value": "Create Card"
                            },
                            {
                                "key": "idList",
                                "value": "{{todoListId}}"
                            }
                        ]
                    }
                },
                "response": [],
                "uid": "22855432-c83336e8-d6f7-4ee4-b3c1-dd7e9941af93"
            },
            {
                "name": "Move the card to done",
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "id": "1188fa19-b63d-48ae-aeb5-9c84eb3299d2",
                            "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(200);",
                                "});",
                                "",
                                "let response;",
                                "",
                                "pm.test(\"Response body is an object\", () => {",
                                "    response = pm.response.json();",
                                "    pm.expect(response).to.be.an('object')",
                                "})",
                                "",
                                "pm.test(\"Response body has ID\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('id')",
                                "})",
                                "",
                                "pm.test(\"Response body has name\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('name')",
                                "})",
                                "",
                                "pm.test(\"Response body has idBoard\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('idBoard')",
                                "})",
                                "",
                                "pm.test(\"Response body has idList\", () => {",
                                "    pm.expect(response).to.haveOwnProperty('idList')",
                                "})",
                                "",
                                "pm.test(\"Validate created information\", () => {",
                                "    pm.expect(response.name).to.be.eql(\"Create Card\");",
                                "    pm.expect(response.idBoard).to.be.eql(pm.variables.get('boardId'));",
                                "    pm.expect(response.idList).to.be.eql(pm.variables.get('doneListId'));",
                                "})"
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    }
                ],
                "id": "67e77f73-269e-4ef2-a225-e8adc9e605fa",
                "protocolProfileBehavior": {
                    "disableBodyPruning": true
                },
                "request": {
                    "method": "PUT",
                    "header": [
                        {
                            "key": "Accept",
                            "value": "application/json"
                        }
                    ],
                    "url": {
                        "raw": "{{urlBase}}/1/cards/:id?key={{trelloKey}}&token={{trelloToken}}&idList={{doneListId}}",
                        "host": [
                            "{{urlBase}}"
                        ],
                        "path": [
                            "1",
                            "cards",
                            ":id"
                        ],
                        "query": [
                            {
                                "key": "key",
                                "value": "{{trelloKey}}"
                            },
                            {
                                "key": "token",
                                "value": "{{trelloToken}}"
                            },
                            {
                                "key": "idList",
                                "value": "{{doneListId}}"
                            }
                        ],
                        "variable": [
                            {
                                "key": "id",
                                "value": "{{cardId}}"
                            }
                        ]
                    }
                },
                "response": [],
                "uid": "22855432-67e77f73-269e-4ef2-a225-e8adc9e605fa"
            },
            {
                "name": "Delete board by ID",
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "id": "e05aa7fb-c32c-4fab-b38c-2dd54b03bb62",
                            "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(200);",
                                "});",
                                ""
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    },
                    {
                        "listen": "prerequest",
                        "script": {
                            "id": "ad080f28-667a-4d6a-a850-7a6ef2d5c3be",
                            "exec": [
                                ""
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    }
                ],
                "id": "03e73677-151b-4cb8-bd40-4d48155ae9da",
                "protocolProfileBehavior": {
                    "disableBodyPruning": true
                },
                "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                        "raw": "{{urlBase}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
                        "host": [
                            "{{urlBase}}"
                        ],
                        "path": [
                            "1",
                            "boards",
                            ":id"
                        ],
                        "query": [
                            {
                                "key": "key",
                                "value": "{{trelloKey}}"
                            },
                            {
                                "key": "token",
                                "value": "{{trelloToken}}"
                            }
                        ],
                        "variable": [
                            {
                                "key": "id",
                                "value": "{{boardId}}"
                            }
                        ]
                    }
                },
                "response": [],
                "uid": "22855432-03e73677-151b-4cb8-bd40-4d48155ae9da"
            },
            {
                "name": "Get deleted board",
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "id": "fc3fed84-4833-4120-a7b2-f8ca8df7c8df",
                            "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(404);",
                                "});",
                                "",
                                "pm.test(\"Validate response body message\", () => {",
                                "    const expectedMessage = \"The requested resource was not found.\"",
                                "    pm.response.to.have.body(expectedMessage)",
                                "})"
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    }
                ],
                "id": "c41e09ff-c8d2-4955-8ec1-31f1adda4265",
                "protocolProfileBehavior": {
                    "disableBodyPruning": true
                },
                "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                        "raw": "{{urlBase}}/1/boards/:id/lists/?key={{trelloKey}}&token={{trelloToken}}",
                        "host": [
                            "{{urlBase}}"
                        ],
                        "path": [
                            "1",
                            "boards",
                            ":id",
                            "lists",
                            ""
                        ],
                        "query": [
                            {
                                "key": "key",
                                "value": "{{trelloKey}}"
                            },
                            {
                                "key": "token",
                                "value": "{{trelloToken}}"
                            }
                        ],
                        "variable": [
                            {
                                "key": "id",
                                "value": "{{boardId}}"
                            }
                        ]
                    }
                },
                "response": [],
                "uid": "22855432-c41e09ff-c8d2-4955-8ec1-31f1adda4265"
            },
            {
                "name": "Get all boards",
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "id": "9b6e19a2-45fb-42a8-a88a-61bf8bd15a03",
                            "exec": [
                                "pm.test('Status code is 200', () => {",
                                "    pm.response.to.have.status(200);",
                                "})",
                                "",
                                "let response;",
                                "",
                                "pm.test('Response body is array', () => {",
                                "    response = pm.response.json();",
                                "    pm.expect(response).to.be.an(\"array\")",
                                "})",
                                "",
                                "pm.test('Set existingBoardIds to be deleted', () =>{",
                                "    pm.expect(response).to.be.an('array')",
                                "    pm.expect(response.length).to.greaterThan(0)",
                                "    const existingBoardIds = response.map(board => board.id)",
                                "    pm.collectionVariables.set('existingBoardIds', existingBoardIds)",
                                "})"
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    },
                    {
                        "listen": "prerequest",
                        "script": {
                            "packages": {},
                            "type": "text/javascript"
                        }
                    }
                ],
                "id": "9175e67d-0a46-4958-bf50-c848501abe3f",
                "protocolProfileBehavior": {
                    "disableBodyPruning": true
                },
                "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                        "raw": "{{urlBase}}/1/members/me/boards?key={{trelloKey}}&token={{trelloToken}}",
                        "host": [
                            "{{urlBase}}"
                        ],
                        "path": [
                            "1",
                            "members",
                            "me",
                            "boards"
                        ],
                        "query": [
                            {
                                "key": "key",
                                "value": "{{trelloKey}}"
                            },
                            {
                                "key": "token",
                                "value": "{{trelloToken}}"
                            }
                        ]
                    }
                },
                "response": [],
                "uid": "22855432-9175e67d-0a46-4958-bf50-c848501abe3f"
            },
            {
                "name": "Delete all existing boards",
                "event": [
                    {
                        "listen": "test",
                        "script": {
                            "id": "e05aa7fb-c32c-4fab-b38c-2dd54b03bb62",
                            "exec": [
                                "pm.test(\"Status code is 200\", function () {",
                                "    pm.response.to.have.status(200);",
                                "});",
                                ""
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    },
                    {
                        "listen": "prerequest",
                        "script": {
                            "id": "ad080f28-667a-4d6a-a850-7a6ef2d5c3be",
                            "exec": [
                                "const existingBoardIds = pm.collectionVariables.get('existingBoardIds');",
                                "const boardId = existingBoardIds.pop()",
                                "console.log(boardId)",
                                "console.log(existingBoardIds)",
                                "pm.collectionVariables.set('boardId', boardId)",
                                "pm.collectionVariables.set('existingBoardIds', existingBoardIds)"
                            ],
                            "type": "text/javascript",
                            "packages": {}
                        }
                    }
                ],
                "id": "c5f7a0ef-4c54-45af-95a9-93b22dce88ef",
                "protocolProfileBehavior": {
                    "disableBodyPruning": true
                },
                "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                        "raw": "{{urlBase}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
                        "host": [
                            "{{urlBase}}"
                        ],
                        "path": [
                            "1",
                            "boards",
                            ":id"
                        ],
                        "query": [
                            {
                                "key": "key",
                                "value": "{{trelloKey}}"
                            },
                            {
                                "key": "token",
                                "value": "{{trelloToken}}"
                            }
                        ],
                        "variable": [
                            {
                                "key": "id",
                                "value": "{{boardId}}"
                            }
                        ]
                    }
                },
                "response": [],
                "uid": "22855432-c5f7a0ef-4c54-45af-95a9-93b22dce88ef"
            }
        ],
        "event": [
            {
                "listen": "prerequest",
                "script": {
                    "id": "1daa23dd-aa71-4354-bf1e-c7b7005cfa9c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                        ""
                    ]
                }
            },
            {
                "listen": "test",
                "script": {
                    "id": "1806b5f4-6c0c-4a7d-9291-4f3cec569d6c",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                        ""
                    ]
                }
            }
        ],
        "variable": [
            {
                "key": "urlBase",
                "value": "https://api.trello.com",
                "type": "string"
            },
            {
                "key": "trelloKey",
                "value": "YOUR_TRELLO_API_KEY_HERE",
                "type": "string"
            },
            {
                "key": "trelloToken",
                "value": "YOUR_TRELLO_API_TOKEN_HERE",
                "type": "string"
            },
            {
                "key": "boardId",
                "value": ""
            },
            {
                "key": "todoListId",
                "value": ""
            },
            {
                "key": "doneListId",
                "value": ""
            },
            {
                "key": "cardId",
                "value": ""
            },
            {
                "key": "existingBoardIds",
                "value": ""
            }
        ]
    }
}
